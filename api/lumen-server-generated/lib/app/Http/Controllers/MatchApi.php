<?php

/**
 * SpareFoot Arena
 * This is the API for the SpareFoot Arena hackathon project
 *
 * OpenAPI spec version: 1.0.0
 * Contact: patrick@sparefoot.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class MatchApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addMatch
     *
     * Add a new match.
     *
     *
     * @return Http response
     */
    public function addMatch()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addMatch');
        }
        $body = $input['body'];


        return response('How about implementing addMatch as a post method ?');
    }
    /**
     * Operation getMatches
     *
     * Find matches.
     *
     *
     * @return Http response
     */
    public function getMatches()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $competitor_id = $input['competitor_id'];

        $game_id = $input['game_id'];


        return response('How about implementing getMatches as a get method ?');
    }
    /**
     * Operation updateMatch
     *
     * Update an existing match.
     *
     *
     * @return Http response
     */
    public function updateMatch()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateMatch');
        }
        $body = $input['body'];


        return response('How about implementing updateMatch as a put method ?');
    }
    /**
     * Operation deleteMatch
     *
     * Deletes a match.
     *
     * @param int $match_id Match id to delete (required)
     *
     * @return Http response
     */
    public function deleteMatch($match_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteMatch as a delete method ?');
    }
    /**
     * Operation getMatchById
     *
     * Find match by ID.
     *
     * @param int $match_id ID of match to return (required)
     *
     * @return Http response
     */
    public function getMatchById($match_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getMatchById as a get method ?');
    }
    /**
     * Operation updateMatchWithForm
     *
     * Updates a match in the store with form data.
     *
     * @param int $match_id ID of match that needs to be updated (required)
     *
     * @return Http response
     */
    public function updateMatchWithForm($match_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateMatchWithForm as a post method ?');
    }
}
